name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env: 
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        services: 
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports: 
              - 27017:27017
        env: 
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        strategy:
          matrix:
            nodejs_version: [18,20]
            os: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                os: macos-latest 

        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result - ${{ matrix.os }} with - ${{ matrix.nodejs_version }}
            path: test-results.xml

    code-coverage:
        name: Code Coverage 
        container:
          image: node:18
        services: 
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            options: 
              --name mongo
        env: 
          MONGO_URI: 'mongodb://mongo:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest 
        steps: 
          - name: Checkout Repository
            uses: actions/checkout@v4

          # - name: Setup NodeJS Version - 20
          #   uses: actions/setup-node@v3
          #   with:
          #     node-version: 20
    
          - name: Install Dependencies
            run: npm install
    
          - name: Code Coverage 
            continue-on-error: true 
            run: npm run coverage
          
          - name: Archive Test Result
            uses: actions/upload-artifact@v4
            with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5

    docker: 
        name: Containerization 
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps: 
          - name: Checkout
            uses: actions/checkout@v4

          - name: dockerhub login
            uses: docker/login-action@v2.2.0
            with: 
              username: ${{ vars.Username_dockerhub }}
              password: ${{ secrets.Password_dockerhub }}

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: false 
              tags: ${{ vars.Username_dockerhub }}/solar-system:${{ github.sha }}

          - name: Docker Image Testing
            run: |
              docker images

              docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=${{ env.MONGO_URI }} \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.Username_dockerhub }}/solar-system:${{ github.sha }}

              export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live

          - name:  push image 
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: ${{ vars.Username_dockerhub }}/solar-system:${{ github.sha }}

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Set up KinD cluster
          uses: engineerd/setup-kind@v0.5.0
          with:
            version: v0.20.0

        - name: Set KUBECONFIG
          run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

        # - name: Set kubeconfig file 
        #   uses: azure/k8s-set-context@v4
        #   with:
        #     method: kubeconfig
        #     kubeconfig: 

        # - name: Install kubectl
        #   uses: azure/setup-kubectl@v4
        #   with:
        #     version: 'v1.32.1'
            
        - name: Fetch cluster details
          run: |
            kubectl version 
            echo -------------
            kubectl get nodes 